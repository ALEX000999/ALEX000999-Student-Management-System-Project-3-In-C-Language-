1. Start

2. Display Welcome Message
   - Print "***** Students Records Management System *****"
   - Print "PRESS ENTER KEY TO CONTINUE."
   - Wait for user to press enter

3. Call mainmenu() function

4. Function mainmenu():
   - Declare choice as integer

   - Print "***** MAIN MENU *****"
   - Print "Enter Your Choice Number."
   - Print "1: Add Student Record"
   - Print "2: Search Student Record"
   - Print "3: Modify Student Record"
   - Print "4: View Student Record"
   - Print "5: Exit"
   - Print "Enter your choice: "
   - Read choice from user

   - Switch on choice:
       - Case 1:
           - Call addstudent() function
           - Break
       - Case 2:
           - Call searchstudent() function
           - Break
       - Case 3:
           - Call updatestudent() function
           - Break
       - Case 4:
           - Call viewstudent() function
           - Break
       - Case 5:
           - Exit the program
           - Break
       - Default:
           - Print "Invalid Choice."

5. Function addstudent():
   - Declare fp as file pointer
   - Declare std as struct students
   - Declare another as character

   - Open "file.txt" in append mode and binary mode
   - If fp is NULL, print "File Not Opening" and exit program

   - While another is 'y':
       - Print "***** ADD STUDENT RECORD *****"
       - Print "Enter Details Of Student."

       - Read student_name, id_no, mobile_no, department, cgpa, gender, and age from user

       - Write std to file

       - Print "If you Want to add another record? Then type 'y' else 'n'."
       - Read another from user

   - Close file

   - Call mainmenu()

6. Function searchstudent():
   - Declare fp as file pointer
   - Declare std as struct students
   - Declare id_num and found as integers

   - Print "***** SEARCH STUDENT RECORD *****"

   - Read id_num from user

   - Open "file.txt" in read mode and binary mode
   - If fp is NULL, print "File Not Opening" and exit program

   - While there are records in file:
       - Read a record into std
       - If std.id_no is equal to id_num:
           - Print student details
           - Set found to 1
           - Break from loop

   - If found is 0, print "ID Number Not Found."

   - Close file

   - Call mainmenu()

7. Function updatestudent():
   - Declare id_num and found as integers
   - Declare fp and temp_fp as file pointers
   - Declare std as struct students

   - Print "***** UPDATE STUDENT RECORD *****"

   - Read id_num from user

   - Open "file.txt" in read mode and binary mode
   - If fp is NULL, print "File Not Opening" and exit program

   - Open "temp.txt" in write mode and binary mode
   - If temp_fp is NULL, print "Error! Temporary File Not Possible To Creating" and exit program

   - While there are records in file:
       - Read a record into std
       - If std.id_no is equal to id_num:
           - Read new CGPA and mobile_no from user
           - Set found to 1

       - Write std to temp_fp

   - Close fp and temp_fp

   - If found is 0, print "ID not found."
   - Else, delete "file.txt" and rename "temp.txt" to "file.txt"

   - Print "Record Updated Successfully."

   - Call mainmenu()

8. Function viewstudent():
   - Declare fp as file pointer
   - Declare std as struct students
   - Declare searchdep as string
   - Declare found and studentCount as integers

   - Print "***** VIEW STUDENT RECORD *****"

   - Read searchdep from user

   - If searchdep is not valid, print "Invalid department code." and return to mainmenu()

   - Open "file.txt" in read mode and binary mode
   - If fp is NULL, print "Error opening file" and exit program

   - While there are records in file:
       - Read a record into std
       - If std.department matches searchdep:
           - Print student details
           - Increment studentCount
           - Set found to 1

   - If found is 0, print "No student record found for the entered department."

   - Close file

   - Call mainmenu()

9. End
